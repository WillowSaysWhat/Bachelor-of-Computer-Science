 Team.io
 
 - player availability  for a match and produce a simple team sheet for the coach
 - generate a team from the current available players
 - should be able to manage different teams (age groups)
 - history of matches and stats generated
 - the coach will input the match, input player availablity, the system will then pick the best players for the match.
 - coach should be able to change the players picked and create his own team.
 - after each match the coach will give them a rating out of 10 and this will adjust their average rating

 Teams 
 Team name
 Recent matches
 Head coach

 Matches
 Opponent
 Players
 Assistant coach (for the match)
 Physio
 Team Captain
 Our team score
 Result (win, Loss, Draw)

 Players
 Name 
 Position
 Average Rating
 Current Availability
 
 Head Coach 
 Name 
 email
 Phone number

 Assistant Coach
  Name 
 email
 Phone number
 Coaching expertise

 Lane Analysis 
  Name 
 email
 Phone number
 expertise



To do
- organise player data


do
	{
		display.banner();
		display.NewPlayerAndStaffMenu();
		cin >> UserInput;
		switch (UserInput)
		{
		case 1:
			do
			{
				display.inputNewPLayer();
				cout << "(First Name): ";
				cin >> fname;
				cout << endl;
				display.inputNewPLayer();
				cout << "(second Name): ";
				cin >> sname;
				
				do
				{
					cout << endl;
					cout << "Select 1 or 2" << endl;
					cout << endl;
					display.setAvailability();
					cin >> UserInput;

					switch (UserInput)
					{
					case 1:
						availability = "Available";
						break;
					case 2:
						availability = "Unavailable";
						break;
					default:
						break;
					}
				} while (UserInput != 1 || UserInput != 2);
				
				do
				{
					display.setPlayerExpertise();
					cin>> UserInput;
					switch (UserInput)
					{
					case 1:
						expertise = "Tank";
						break;
					case 2:
						expertise = "ADC";
						break;
					case 3:
						expertise = "Jungler";
						break;
					case 4:
						expertise = "Offlane";
						break;
					case 5:
						expertise = "Support";
						break;
					
					default:
						break;
					}
				} while (UserInput != 1 || UserInput != 2 || UserInput != 3 || UserInput != 4 || UserInput != 5);
				
				

			} while (UserInput !=0);
			
			
			break;
		case 2:
			break;
		case 3:
			break;

		default:
			break;
		}
	} while (UserInput != 0);





            

     